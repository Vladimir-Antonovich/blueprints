tosca_definitions_version: cloudify_dsl_1_3

description: >
  Example how to heal work

imports:
  - https://cloudify.co/spec/cloudify/5.0.5/types.yaml
  - plugin:cloudify-openstack-plugin?version>3.2.9

inputs:
###############################################################################
# openstack RC
###############################################################################

  openstack_auth_url:
    type: string
    default: { get_secret: openstack_auth_url }

  openstack_username:
    type: string
    default: { get_secret: openstack_username }

  openstack_password:
    type: string
    default: { get_secret: openstack_password }

  openstack_tenant_name:
    type: string
    default: { get_secret: openstack_tenant_name }

  openstack_project_name:
    type: string
    default: { get_secret: openstack_project_name }

  openstack_region:
    type: string
    default: { get_secret: openstack_region }

  openstack_user_domain_name:
    type: string
    default: 'default'

  openstack_project_domain_name:
    type: string
    default: 'default'

###################################################
# External network
###################################################

  external_network_name:
    type: string
    default: test-network

  external_secgroup_name:
    type: string
    default: heal-group

  external_secgroup_rules:
    default:
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 1
        port_range_max: 65535
        direction: ingress
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 1
        port_range_max: 65535
        direction: ingress
        protocol: udp

###############################################################################

  image:
    type: string
    default: CentOS-7_6-x86_64-GenericCloud

  flavor:
    type: string
    default: m1.medium

  user:
    type: string
    default: centos

  agent_key_name:
    type: string
    default: { get_secret: agent_key_name }


  instance_name:
    type: string
    default: heal-test


dsl_definitions:

  client_config: &client_config
    auth_url: { get_input: openstack_auth_url }
    username: { get_input: openstack_username }
    password: { get_input: openstack_password }
    project_name: { get_input: openstack_project_name }
    tenant_name: { get_input: openstack_tenant_name }
    region_name: { get_input: openstack_region }
    user_domain_name: { get_input: openstack_user_domain_name }
    project_domain_name: { get_input: openstack_project_domain_name }
    kwargs:
      volume_api_version: 2

node_templates:

  external_network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: { get_input: external_network_name }

  external_secgroup:
    type: cloudify.nodes.openstack.SecurityGroup
    properties:
      client_config: *client_config
      use_external_resource: false
      resource_config:
        name: { get_input: external_secgroup_name }
      security_group_rules: { get_input: external_secgroup_rules }

  keypair:
    type: cloudify.nodes.openstack.KeyPair
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        id: { get_input: agent_key_name }

  port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: external_network
      - type: cloudify.relationships.openstack.port_connected_to_security_group
        target: external_secgroup

  node:
    type: cloudify.nodes.openstack.Server
    properties:
      use_public_ip: true
      client_config: *client_config
      agent_config:
        install_method: remote
        user: { get_input: user }
        key: { get_secret: private_ssh_key }
      resource_config:
        name: { get_input: instance_name }
      image: { get_input: image }
      flavor: { get_input: flavor }
    relationships:
      - target: port
        type: cloudify.relationships.openstack.server_connected_to_port
      - target: keypair
        type: cloudify.relationships.openstack.server_connected_to_keypair

  haproxy:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: script.script_runner.tasks.run
          inputs:
            script_path: scripts/start.sh
        stop:
          implementation: script.script_runner.tasks.run
          inputs:
            script_path: scripts/stop.sh

    relationships:
      - type: cloudify.relationships.contained_in
        target: node