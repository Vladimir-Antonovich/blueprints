tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint install Postfix and spamassassin

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  
inputs:

  image:
    description: >
      Ubuntu 14.04.
      At the moment the blueprint writing Ubuntu 16.04 does not supported
    default: 6c3047c6-17b1-4aaf-a657-9229bb481e50

  flavor:
    description: "2x2"
    default: c4b193d2-f331-4250-9b15-bbfde97c462a

  agent_user:
    default: "ubuntu"

  external_network_name:
    default: "external"

  email_relay_network:
    description: >
      The network in CIDR format from which you can send emails
    default: '127.0.0.1/32'

  email_relay_domain:
    description: something like example.com
    default: "vnf.lab"
 
node_templates:

  assassin:
    type: cloudify.openstack.nodes.Server
    properties:
      resource_id: "SpamAssassin"
      cloudify_agent:
        user: { get_input: agent_user }
      server:
        image: { get_input: image }
        flavor: { get_input: flavor }
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
              CPUCollector: {}
              MemoryCollector: {}
              LoadAverageCollector: {}
              DiskUsageCollector:
                config:
                  devices: x?vd[a-z]+[0-9]*$
              NetworkCollector: {}
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              image: { get_input: image }
              flavor: { get_input: flavor }
      cloudify.interfaces.validation:
        creation:
          inputs:
            args:
              image: { get_input: image }
              flavor: { get_input: flavor }

    relationships:
      - target: assassin_floating_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: assassin_security_group
        type: cloudify.openstack.server_connected_to_security_group

  assassin_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: spamassassin_security_group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 25
        - remote_ip_prefix: 0.0.0.0/0
          port: 22

  assassin_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

  postfix_node:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/postfix_create.sh
          inputs:
            process:
               cwd: /tmp
               env:
                 MY_NETWORK: { get_input: email_relay_network}
                 MY_DOMAIN: { get_input: email_relay_domain }
    relationships:
      - type: cloudify.relationships.contained_in
        target: assassin

  spamassassin_node:
    type: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/spamassassin_create.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: assassin
      - type: cloudify.relationships.depends_on
        target: postfix_node

    

outputs:

  SpamAssassin:
    value:
      Floating_IP: { get_attribute: [ assassin_floating_ip, floating_ip_address ] }
      SMTP_Port: 25